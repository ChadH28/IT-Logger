{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layouts/Searchbar.js","components/logs/LogItem.js","components/layouts/Preloader.js","components/logs/Logs.js","components/layouts/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechListItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9b9fe8c.chunk.js","sourcesContent":["// Logs\r\nexport const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\n// Techs\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';","import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS\r\n} from './types';\r\n\r\n// Get logs from server\r\nexport const getLogs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/logs');\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Add new log\r\nexport const addLog = log => async dispatch => {\r\n    try {\r\n        setLoading();\r\n  \r\n        const res = await fetch('/logs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_LOG,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Delete log from server\r\nexport const deleteLog = (id) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        await fetch(`/logs/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n  \r\n        dispatch({\r\n            type: DELETE_LOG,\r\n            payload: id\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Update log on server\r\nexport const updateLog = log => async dispatch => {\r\n    try {\r\n        setLoading();\r\n \r\n        const res = await fetch(`/logs/${log.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n  \r\n        dispatch({\r\n            type: UPDATE_LOG,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Search server logs\r\nexport const searchLogs = text => async dispatch => {\r\n    try {\r\n        setLoading();\r\n  \r\n        const res = await fetch(`/logs?q=${text}`);\r\n        const data = await res.json();\r\n  \r\n        dispatch({\r\n            type: SEARCH_LOGS,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Set current log\r\nexport const setCurrent = log => {\r\n    return {\r\n        type: SET_CURRENT,\r\n        payload: log\r\n    };\r\n};\r\n\r\n// Clear current log\r\nexport const clearCurrent = () => {\r\n    return {\r\n        type: CLEAR_CURRENT\r\n    };\r\n};\r\n\r\n// Set the loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    };\r\n};","import React, {useRef} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {searchLogs} from '../../actions/logActions';\r\n\r\nconst Searchbar = ({searchLogs}) => {\r\n    const text = useRef('');\r\n\r\n    const onChange = e => {\r\n        searchLogs(text.current.value);\r\n    };\r\n\r\n    return (\r\n        <nav style={{marginBottom: '30px'}} className='blue'>\r\n            <div className='nav-wrapper'>\r\n                <form>\r\n                    <div className='input-field'>\r\n                        <input\r\n                            id='search'\r\n                            type='search'\r\n                            placeholder='Search Logs..'\r\n                            ref={text}\r\n                            onChange={onChange}\r\n                        />\r\n                        <label className='label-icon' htmlFor='search'>\r\n                            <i className='material-icons'>search</i>\r\n                        </label>\r\n                        <i className='material-icons'>close</i>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n    searchLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null,{searchLogs})\r\n(Searchbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport {connect} from 'react-redux';\r\nimport {deleteLog,setCurrent} from '../../actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({log, deleteLog, setCurrent}) => {\r\n    const onDelete = () => {\r\n        deleteLog(log.id);\r\n        M.toast({ html: 'Log Deleted' });\r\n    };\r\n    \r\n    return (\r\n        <li className='collection-item'>\r\n            <div>\r\n                <a\r\n                    href=\"#edit-log-modal\"\r\n                    className={`modal-trigger ${log.attention ? 'red-text' : 'blue-text'}`}\r\n                    onClick={() => setCurrent(log)}\r\n                >\r\n                    {log.message}\r\n                </a>\r\n                <br/>\r\n                <span className='grey-text'>\r\n                    <span className='black-text'>ID #{log.id}</span> Last updated by:{' '}\r\n                     <span className='black-text'>{log.tech}</span> on <Moment format='MMMM Do YYYY, h:mm a'>{log.date}</Moment>\r\n                </span>\r\n                <a href='!#' className='secondary-content' onClick={onDelete}><i className='material-icons red-text'>delete</i></a>\r\n            </div> \r\n        </li>\r\n    )\r\n}\r\n\r\nLogItem.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    deleteLog: PropTypes.func.isRequired,\r\n    setCurrent: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null,{deleteLog, setCurrent})\r\n(LogItem);","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='progress blue lighten-5'>\r\n      <div className='indeterminate blue lighten-3' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport Preloader from '../layouts/Preloader';\r\nimport PropTypes from 'prop-types';\r\nimport {getLogs} from '../../actions/logActions';\r\n\r\nconst Logs = ({log: {logs, loading}, getLogs}) => {\r\n\r\n    useEffect(() => {\r\n        getLogs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    \r\n    if (loading || logs === null) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    return (\r\n        <ul className='collection with-header'>\r\n            <li className='collection-header'>\r\n                <h4 className='center'>System Logs</h4>\r\n            </li>\r\n            {!loading && logs.length === 0 ? (\r\n                <p className='center'>No logs to show...</p>\r\n            ) : (\r\n                logs.map(log => <LogItem log={log} key={log.id}/>)\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nLogs.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    getLogs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log\r\n});\r\n\r\nexport default connect(mapStateToProps,{getLogs})\r\n(Logs);","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n    return (\r\n        <div className='fixed-action-btn'>\r\n            <a href='#add-log-modal' className='btn-floating btn-large blue darken-2 modal-trigger'>\r\n                <i className='large material-icons'>add</i>\r\n            </a>\r\n            <ul>\r\n                <li>\r\n                    <a href='#tech-list-modal' className='btn-floating green modal-trigger'>\r\n                        <i className='material-icons'>person</i>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href='#add-tech-modal' className='btn-floating orange modal-trigger'>\r\n                        <i className='material-icons'>person_add</i>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBtn;","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n} from './types';\r\n\r\n// Get techs from server\r\nexport const getTechs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n  \r\n        const res = await fetch('/techs');\r\n        const data = await res.json();\r\n  \r\n        dispatch({\r\n            type: GET_TECHS,\r\n            payload: data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n\r\n// Add technician to server\r\nexport const addTech = tech => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/techs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(tech),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_TECH,\r\n            payload: data\r\n        });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: TECHS_ERROR,\r\n                payload: err.response.statusText\r\n            });\r\n        }\r\n};\r\n\r\n// Delete technician from server\r\nexport const deleteTech = id => async dispatch => {\r\n    try {\r\n        setLoading();\r\n  \r\n        await fetch(`/techs/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n        dispatch({\r\n            type: DELETE_TECH,\r\n            payload: id\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.response.statusText\r\n        });\r\n    }\r\n};\r\n  \r\n// Set the loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    };\r\n};","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getTechs} from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  \r\n    useEffect(() => {\r\n        getTechs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        !loading &&\r\n        techs !== null &&\r\n        techs.map(t => (\r\n            <option\r\n                key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n                {t.firstName} {t.lastName}\r\n            </option>\r\n        ))\r\n    );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    tech: state.tech\r\n});\r\n\r\nexport default connect(mapStateToProps,{getTechs})\r\n(TechSelectOptions);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {addLog} from '../../actions/logActions';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\n\r\nconst AddLogModal = ({addLog}) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and tech' });\r\n        } else {\r\n            const newLog = {\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            };\r\n            addLog(newLog);\r\n\r\n            M.toast({ html: `Log added by ${tech}` });\r\n            \r\n            // Clear Fields\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n        };\r\n    };\r\n    return (\r\n        <div id='add-log-modal' className='modal' style={modalStyle}>\r\n            <div className='modal-content'>\r\n                <h4>Enter System Log</h4>\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input\r\n                            type='text'\r\n                            name='message'\r\n                            value={message}\r\n                            onChange={e => setMessage(e.target.value)}\r\n                        />\r\n                        <label htmlFor='message' className='active'>\r\n                            Log Message\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <select\r\n                            name='tech'\r\n                            value={tech}\r\n                            className='browser-default'\r\n                            onChange={e => setTech(e.target.value)}\r\n                        >\r\n                            <option value='' disabled>\r\n                                Select Technician\r\n                            </option>\r\n                                <TechSelectOptions/>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <p>\r\n                            <label>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    className='filled-in'\r\n                                    checked={attention}\r\n                                    value={attention}\r\n                                    onChange={e => setAttention(!attention)}\r\n                                />\r\n                                <span>Needs Attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='modal-footer'>\r\n                <a\r\n                    href='#!'\r\n                    onClick={onSubmit}\r\n                    className='modal-close waves-effect blue waves-light btn'\r\n                >\r\n                    Enter\r\n                </a>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nAddLogModal.propTypes = {\r\n    addLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n};\r\n\r\nexport default connect(null,{addLog})\r\n(AddLogModal);","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {updateLog} from '../../actions/logActions';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst EditLogModal = ({updateLog, current}) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (current) {\r\n            setMessage(current.message);\r\n            setAttention(current.attention);\r\n            setTech(current.tech);\r\n        }\r\n    }, [current]);\r\n\r\n    const onSubmit = () => {\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and tech' });\r\n        } else {\r\n            const updLog = {\r\n                id: current.id,\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            };\r\n            // Update Fields\r\n            updateLog(updLog);\r\n            M.toast({ html: `Log updated by ${tech}` });\r\n      \r\n\r\n            // Clear Fields\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n            <div className='modal-content'>\r\n                <h4>Enter System Log</h4>\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input\r\n                            type='text'\r\n                            name='message'\r\n                            value={message}\r\n                            onChange={e => setMessage(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <select\r\n                            name='tech'\r\n                            value={tech}\r\n                            className='browser-default'\r\n                            onChange={e => setTech(e.target.value)}\r\n                        >\r\n                            <option value='' disabled>\r\n                                Select Technician\r\n                            </option>\r\n                                <TechSelectOptions/>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <p>\r\n                            <label>\r\n                                <input\r\n                                    type='checkbox'\r\n                                    className='filled-in'\r\n                                    checked={attention}\r\n                                    value={attention}\r\n                                    onChange={e => setAttention(!attention)}\r\n                                />\r\n                                <span>Needs Attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='modal-footer'>\r\n                <a\r\n                    href='#!'\r\n                    onClick={onSubmit}\r\n                    className='modal-close waves-effect blue waves-light btn'\r\n                >\r\n                    Enter\r\n                </a>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n    current: PropTypes.object,\r\n    updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    current: state.log.current\r\n});\r\n  \r\nexport default connect(mapStateToProps,{updateLog})\r\n(EditLogModal);","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {addTech} from '../../actions/techActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({addTech}) => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        if (firstName === '' || lastName === '') {\r\n            M.toast({ html: 'Please enter the first and last name.' });\r\n        } else {\r\n            addTech({\r\n                firstName,\r\n                lastName\r\n            });\r\n\r\n            // Alert\r\n            M.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n            \r\n            // Clear Fields\r\n            setFirstName('');\r\n            setLastName('');\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div id='add-tech-modal' className='modal'>\r\n            <div className='modal-content'>\r\n                <h4>New Technician</h4>\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input\r\n                            type='text'\r\n                            name='firstName'\r\n                            value={firstName}\r\n                            onChange={e => setFirstName(e.target.value)}\r\n                        />\r\n                        <label htmlFor='firstName' className='active'>\r\n                            First Name\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='input-field'>\r\n                        <input\r\n                            type='text'\r\n                            name='lastName'\r\n                            value={lastName}\r\n                            onChange={e => setLastName(e.target.value)}\r\n                        />\r\n                        <label htmlFor='lastName' className='active'>\r\n                            Last Name\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='modal-footer'>\r\n                <a\r\n                    href='#!'\r\n                    onClick={onSubmit}\r\n                    className='modal-close waves-effect blue waves-light btn'\r\n                >\r\n                    Enter\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddTechModal.propTypes = {\r\n    addTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null,{addTech})\r\n(AddTechModal);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {deleteTech} from '../../actions/techActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechListItem = ({deleteTech, tech: {firstName, lastName,id}}) => {\r\n    const onDelete = () => {\r\n        deleteTech(id);\r\n        M.toast({html: 'Technician deleted'});\r\n    };\r\n\r\n    return (\r\n        <li className='collection-item'>\r\n            <div>\r\n                {firstName} {lastName}\r\n                <a href='#!' className='secondary-content' onClick={onDelete}>\r\n                    <i className='material-icons red-text'>delete</i>\r\n                </a>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\n\r\nTechListItem.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{deleteTech})\r\n(TechListItem);","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getTechs} from '../../actions/techActions';\r\nimport TechListItem from './TechListItem';\r\n\r\nconst TechListModal = ({getTechs, tech:{ techs, loading } }) => {\r\n\r\n    useEffect(() => {\r\n        getTechs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div id='tech-list-modal' className='modal'>\r\n            <div className='modal-content'>\r\n                <h4>Technician List</h4>\r\n                <ul className='collection'>\r\n                    {!loading &&\r\n                    techs !== null &&\r\n                    techs.map(tech => (\r\n                        <TechListItem tech={tech} key={tech.id}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n \r\n    )\r\n}\r\n\r\nTechListModal.propTypes= {\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired\r\n};\r\n  \r\nconst mapStateToProps = state => ({\r\n    tech: state.tech\r\n});\r\n\r\nexport default connect(mapStateToProps,{getTechs})\r\n(TechListModal);","import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    logs: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_LOGS:\r\n        return {\r\n          ...state,\r\n          logs: action.payload,\r\n          loading: false\r\n        };\r\n      case ADD_LOG:\r\n        return {\r\n          ...state,\r\n          logs: [...state.logs, action.payload],\r\n          loading: false\r\n        };\r\n      case DELETE_LOG:\r\n        return {\r\n          ...state,\r\n          logs: state.logs.filter(log => log.id !== action.payload),\r\n          loading: false\r\n        };\r\n      case UPDATE_LOG:\r\n        return {\r\n          ...state,\r\n          logs: state.logs.map(log =>\r\n            log.id === action.payload.id ? action.payload : log\r\n          )\r\n        };\r\n      case SEARCH_LOGS:\r\n        return {\r\n          ...state,\r\n          logs: action.payload\r\n        };\r\n      case SET_CURRENT:\r\n        return {\r\n          ...state,\r\n          current: action.payload\r\n        };\r\n      case CLEAR_CURRENT:\r\n        return {\r\n          ...state,\r\n          current: null\r\n        };\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case LOGS_ERROR:\r\n        console.error(action.payload);\r\n        return {\r\n          ...state,\r\n          error: action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    techs: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_TECHS:\r\n        return {\r\n          ...state,\r\n          techs: action.payload,\r\n          loading: false\r\n        };\r\n      case ADD_TECH:\r\n        return {\r\n          ...state,\r\n          techs: [...state.techs, action.payload],\r\n          loading: false\r\n        };\r\n      case DELETE_TECH:\r\n        return {\r\n          ...state,\r\n          techs: state.techs.filter(tech => tech.id !== action.payload),\r\n          loading: false\r\n        };\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case TECHS_ERROR:\r\n        console.error(action.payload);\r\n        return {\r\n          ...state,\r\n          error: action.payload,\r\n          loading: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, {useEffect, Fragment} from 'react';\r\nimport SearchBar from './components/layouts/Searchbar';\r\nimport Logs from './components/logs/Logs';\r\nimport AddBtn from './components/layouts/AddBtn';\r\nimport AddLogModal from './components/logs/AddLogModal';\r\nimport EditLogModal from './components/logs/EditLogModal';\r\nimport AddTechModal from './components/techs/AddTechModal';\r\nimport TechListModal from './components/techs/TechListModal';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\n// Materialize CSS and App CSS\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    // Init Materialize JS\r\n    M.AutoInit();\r\n  });\r\n\r\n  return (\r\n    <Provider store={store}>\r\n    <Fragment>\r\n      <SearchBar/>\r\n      <div className='container'>\r\n        <AddBtn/>\r\n        <AddTechModal/>\r\n        <AddLogModal/>\r\n        <EditLogModal/>\r\n        <TechListModal/>\r\n        <Logs/>\r\n      </div>\r\n    </Fragment>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}